name: Deploy bot to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/tg-bot:latest ./tg-bot
        docker tag tg-bot:latest ${{ secrets.DOCKER_USERNAME }}/tg-bot:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/tg-bot:latest

    - name: Deploy to EC2
      env:
        MONGODB_TOKEN: ${{ secrets.MONGODB_TOKEN }}
        TG_TOKEN: ${{ secrets.TG_TOKEN }}
      run: |
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker pull ${{ secrets.DOCKER_USERNAME }}/tg-bot:latest
          docker stop tg-bot || true
          docker rm tg-bot || true
          docker run -d --name tg-bot --env MONGODB_TOKEN=$MONGODB_TOKEN --env TG_TOKEN=$TG_TOKEN ${{ secrets.DOCKER_USERNAME }}/tg-bot:latest
        EOF
